(function (exports) {
'use strict';

/**
 * File uploads related behaviors.
 */

// eslint-disable-next-line import/prefer-default-export
function fileUpload() {
  console.error('This script needs to be rewritten without jQuery');
}

/**
 * Breadcrumb related behaviors.
 */

// eslint-disable-next-line import/prefer-default-export
function breadcrumbs() {
  console.error('This script needs to be rewritten without jQuery');
}

/**
 * Contextual navigation scripts
 */

// eslint-disable-next-line import/prefer-default-export
function contextualNav() {
  console.error('This script needs to be rewritten without jQuery');
}

/**
 * Datepickers
 */

// eslint-disable-next-line import/prefer-default-export
function datepicker() {
  console.error('This script needs to be rewritten without jQuery');
}

document.querySelectorAll('.file__translations-control').forEach(function (button) {
  return button.addEventListener('click', function (event) {
    event.target.classList.toggle('is-collapsed');
  });
});

/**
 * Exposed filter related behaviors.
 */

// eslint-disable-next-line import/prefer-default-export
function filters() {
  console.error('This script needs to be rewritten without jQuery');
}

/**
 * Helper methods for the inpage navigation component.
 */

// eslint-disable-next-line import/prefer-default-export
function inpageNav() {
  console.error('This script needs to be rewritten without jQuery');
}

/**
 * Timeline
 */

// eslint-disable-next-line import/prefer-default-export
function timeline() {
  console.error('This script needs to be rewritten without jQuery');
}

/**
 * @file
 * Breadcrumb related behaviors.
 */

// eslint-disable-next-line import/prefer-default-export
function profileTopbars() {
  console.error('This script needs to be rewritten without jQuery');
}

/**
 * @file
 * Nav tabs related behaviors.
 */

// eslint-disable-next-line import/prefer-default-export
function navTabs() {
  console.error('This script needs to be rewritten without jQuery');
}

// Export

exports.fileUpload = fileUpload;
exports.breadcrumbs = breadcrumbs;
exports.contextualNav = contextualNav;
exports.datepicker = datepicker;
exports.filters = filters;
exports.inpageNav = inpageNav;
exports.timeline = timeline;
exports.profileTopbars = profileTopbars;
exports.navTabs = navTabs;

}((this.Europa = this.Europa || {})));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXVyb3BhLmpzIiwic291cmNlcyI6WyIuLi8uLi9ub2RlX21vZHVsZXMvQGVjLWV1cm9wYS9ldXJvcGEtY29tcG9uZW50LWxpYnJhcnkvZnJhbWV3b3JrL2F0b21zL2Zvcm1zL2ZpbGUtdXBsb2Fkcy9maWxlLXVwbG9hZHMuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvQGVjLWV1cm9wYS9ldXJvcGEtY29tcG9uZW50LWxpYnJhcnkvZnJhbWV3b3JrL21vbGVjdWxlcy9icmVhZGNydW1icy9icmVhZGNydW1icy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9AZWMtZXVyb3BhL2V1cm9wYS1jb21wb25lbnQtbGlicmFyeS9mcmFtZXdvcmsvbW9sZWN1bGVzL2NvbnRleHQtbmF2cy9jb250ZXh0LW5hdnMuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvQGVjLWV1cm9wYS9ldXJvcGEtY29tcG9uZW50LWxpYnJhcnkvZnJhbWV3b3JrL21vbGVjdWxlcy9kYXRlcGlja2Vycy9kYXRlcGlja2Vycy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9AZWMtZXVyb3BhL2V1cm9wYS1jb21wb25lbnQtbGlicmFyeS9mcmFtZXdvcmsvbW9sZWN1bGVzL2ZpbGVzL2ZpbGVzLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0BlYy1ldXJvcGEvZXVyb3BhLWNvbXBvbmVudC1saWJyYXJ5L2ZyYW1ld29yay9tb2xlY3VsZXMvZmlsdGVycy9maWx0ZXJzLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0BlYy1ldXJvcGEvZXVyb3BhLWNvbXBvbmVudC1saWJyYXJ5L2ZyYW1ld29yay9tb2xlY3VsZXMvaW5wYWdlLW5hdnMvaW5wYWdlLW5hdnMuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvQGVjLWV1cm9wYS9ldXJvcGEtY29tcG9uZW50LWxpYnJhcnkvZnJhbWV3b3JrL21vbGVjdWxlcy90aW1lbGluZXMvdGltZWxpbmVzLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0BlYy1ldXJvcGEvZXVyb3BhLWNvbXBvbmVudC1saWJyYXJ5L2ZyYW1ld29yay9vcmdhbmlzbXMvcHJvZmlsZS10b3BiYXJzL3Byb2ZpbGUtdG9wYmFycy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9AZWMtZXVyb3BhL2V1cm9wYS1jb21wb25lbnQtbGlicmFyeS9mcmFtZXdvcmsvb3JnYW5pc21zL25hdi10YWJzL25hdi10YWJzLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0BlYy1ldXJvcGEvZXVyb3BhLWNvbXBvbmVudC1saWJyYXJ5L2ZyYW1ld29yay9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZpbGUgdXBsb2FkcyByZWxhdGVkIGJlaGF2aW9ycy5cbiAqL1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydFxuZXhwb3J0IGZ1bmN0aW9uIGZpbGVVcGxvYWQoKSB7XG4gIGNvbnNvbGUuZXJyb3IoJ1RoaXMgc2NyaXB0IG5lZWRzIHRvIGJlIHJld3JpdHRlbiB3aXRob3V0IGpRdWVyeScpO1xufVxuIiwiLyoqXG4gKiBCcmVhZGNydW1iIHJlbGF0ZWQgYmVoYXZpb3JzLlxuICovXG5cbiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydFxuZXhwb3J0IGZ1bmN0aW9uIGJyZWFkY3J1bWJzKCkge1xuICBjb25zb2xlLmVycm9yKCdUaGlzIHNjcmlwdCBuZWVkcyB0byBiZSByZXdyaXR0ZW4gd2l0aG91dCBqUXVlcnknKTtcbn1cbiIsIi8qKlxuICogQ29udGV4dHVhbCBuYXZpZ2F0aW9uIHNjcmlwdHNcbiAqL1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydFxuZXhwb3J0IGZ1bmN0aW9uIGNvbnRleHR1YWxOYXYoKSB7XG4gIGNvbnNvbGUuZXJyb3IoJ1RoaXMgc2NyaXB0IG5lZWRzIHRvIGJlIHJld3JpdHRlbiB3aXRob3V0IGpRdWVyeScpO1xufVxuIiwiLyoqXG4gKiBEYXRlcGlja2Vyc1xuICovXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvcHJlZmVyLWRlZmF1bHQtZXhwb3J0XG5leHBvcnQgZnVuY3Rpb24gZGF0ZXBpY2tlcigpIHtcbiAgY29uc29sZS5lcnJvcignVGhpcyBzY3JpcHQgbmVlZHMgdG8gYmUgcmV3cml0dGVuIHdpdGhvdXQgalF1ZXJ5Jyk7XG59XG4iLCJkb2N1bWVudFxuICAucXVlcnlTZWxlY3RvckFsbCgnLmZpbGVfX3RyYW5zbGF0aW9ucy1jb250cm9sJylcbiAgLmZvckVhY2goYnV0dG9uID0+IGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgIGV2ZW50LnRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKCdpcy1jb2xsYXBzZWQnKTtcbiAgfSkpO1xuIiwiLyoqXG4gKiBFeHBvc2VkIGZpbHRlciByZWxhdGVkIGJlaGF2aW9ycy5cbiAqL1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydFxuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlcnMoKSB7XG4gIGNvbnNvbGUuZXJyb3IoJ1RoaXMgc2NyaXB0IG5lZWRzIHRvIGJlIHJld3JpdHRlbiB3aXRob3V0IGpRdWVyeScpO1xufVxuIiwiLyoqXG4gKiBIZWxwZXIgbWV0aG9kcyBmb3IgdGhlIGlucGFnZSBuYXZpZ2F0aW9uIGNvbXBvbmVudC5cbiAqL1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydFxuZXhwb3J0IGZ1bmN0aW9uIGlucGFnZU5hdigpIHtcbiAgY29uc29sZS5lcnJvcignVGhpcyBzY3JpcHQgbmVlZHMgdG8gYmUgcmV3cml0dGVuIHdpdGhvdXQgalF1ZXJ5Jyk7XG59XG4iLCIvKipcbiAqIFRpbWVsaW5lXG4gKi9cblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnRcbmV4cG9ydCBmdW5jdGlvbiB0aW1lbGluZSgpIHtcbiAgY29uc29sZS5lcnJvcignVGhpcyBzY3JpcHQgbmVlZHMgdG8gYmUgcmV3cml0dGVuIHdpdGhvdXQgalF1ZXJ5Jyk7XG59XG4iLCIvKipcbiAqIEBmaWxlXG4gKiBCcmVhZGNydW1iIHJlbGF0ZWQgYmVoYXZpb3JzLlxuICovXG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnRcbiBleHBvcnQgZnVuY3Rpb24gcHJvZmlsZVRvcGJhcnMoKSB7XG4gICBjb25zb2xlLmVycm9yKCdUaGlzIHNjcmlwdCBuZWVkcyB0byBiZSByZXdyaXR0ZW4gd2l0aG91dCBqUXVlcnknKTtcbiB9XG4iLCIvKipcbiAqIEBmaWxlXG4gKiBOYXYgdGFicyByZWxhdGVkIGJlaGF2aW9ycy5cbiAqL1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvcHJlZmVyLWRlZmF1bHQtZXhwb3J0XG4gZXhwb3J0IGZ1bmN0aW9uIG5hdlRhYnMoKSB7XG4gICBjb25zb2xlLmVycm9yKCdUaGlzIHNjcmlwdCBuZWVkcyB0byBiZSByZXdyaXR0ZW4gd2l0aG91dCBqUXVlcnknKTtcbiB9XG4iLCIvLyBFeHBvcnRcblxuZXhwb3J0ICogZnJvbSAnLi9hdG9tcy9mb3Jtcy9maWxlLXVwbG9hZHMvZmlsZS11cGxvYWRzJztcbmV4cG9ydCAqIGZyb20gJy4vbW9sZWN1bGVzL2JyZWFkY3J1bWJzL2JyZWFkY3J1bWJzJztcbmV4cG9ydCAqIGZyb20gJy4vbW9sZWN1bGVzL2NvbnRleHQtbmF2cy9jb250ZXh0LW5hdnMnO1xuZXhwb3J0ICogZnJvbSAnLi9tb2xlY3VsZXMvZGF0ZXBpY2tlcnMvZGF0ZXBpY2tlcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9tb2xlY3VsZXMvZmlsZXMvZmlsZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9tb2xlY3VsZXMvZmlsdGVycy9maWx0ZXJzJztcbmV4cG9ydCAqIGZyb20gJy4vbW9sZWN1bGVzL2lucGFnZS1uYXZzL2lucGFnZS1uYXZzJztcbmV4cG9ydCAqIGZyb20gJy4vbW9sZWN1bGVzL3RpbWVsaW5lcy90aW1lbGluZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9vcmdhbmlzbXMvcHJvZmlsZS10b3BiYXJzL3Byb2ZpbGUtdG9wYmFycyc7XG5leHBvcnQgKiBmcm9tICcuL29yZ2FuaXNtcy9uYXYtdGFicy9uYXYtdGFicyc7XG4iXSwibmFtZXMiOlsiZmlsZVVwbG9hZCIsImVycm9yIiwiYnJlYWRjcnVtYnMiLCJjb250ZXh0dWFsTmF2IiwiZGF0ZXBpY2tlciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJidXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJ0YXJnZXQiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJmaWx0ZXJzIiwiaW5wYWdlTmF2IiwidGltZWxpbmUiLCJwcm9maWxlVG9wYmFycyIsIm5hdlRhYnMiXSwibWFwcGluZ3MiOiI7OztBQUFBOzs7OztBQUtBLEFBQU8sU0FBU0EsVUFBVCxHQUFzQjtVQUNuQkMsS0FBUixDQUFjLGtEQUFkOzs7QUNORjs7Ozs7QUFLQSxBQUFPLFNBQVNDLFdBQVQsR0FBdUI7VUFDcEJELEtBQVIsQ0FBYyxrREFBZDs7O0FDTkY7Ozs7O0FBS0EsQUFBTyxTQUFTRSxhQUFULEdBQXlCO1VBQ3RCRixLQUFSLENBQWMsa0RBQWQ7OztBQ05GOzs7OztBQUtBLEFBQU8sU0FBU0csVUFBVCxHQUFzQjtVQUNuQkgsS0FBUixDQUFjLGtEQUFkOzs7QUNORkksU0FDR0MsZ0JBREgsQ0FDb0IsNkJBRHBCLEVBRUdDLE9BRkgsQ0FFVztTQUFVQyxPQUFPQyxnQkFBUCxDQUF3QixPQUF4QixFQUFpQyxVQUFDQyxLQUFELEVBQVc7VUFDdkRDLE1BQU4sQ0FBYUMsU0FBYixDQUF1QkMsTUFBdkIsQ0FBOEIsY0FBOUI7R0FEaUIsQ0FBVjtDQUZYOztBQ0FBOzs7OztBQUtBLEFBQU8sU0FBU0MsT0FBVCxHQUFtQjtVQUNoQmIsS0FBUixDQUFjLGtEQUFkOzs7QUNORjs7Ozs7QUFLQSxBQUFPLFNBQVNjLFNBQVQsR0FBcUI7VUFDbEJkLEtBQVIsQ0FBYyxrREFBZDs7O0FDTkY7Ozs7O0FBS0EsQUFBTyxTQUFTZSxRQUFULEdBQW9CO1VBQ2pCZixLQUFSLENBQWMsa0RBQWQ7OztBQ05GOzs7Ozs7QUFNQyxBQUFPLFNBQVNnQixjQUFULEdBQTBCO1VBQ3ZCaEIsS0FBUixDQUFjLGtEQUFkOzs7QUNQSDs7Ozs7O0FBTUMsQUFBTyxTQUFTaUIsT0FBVCxHQUFtQjtVQUNoQmpCLEtBQVIsQ0FBYyxrREFBZDs7O0FDUEgsU0FFQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQSxBQUNBLEFBQ0EsQUFDQTs7Ozs7Ozs7Ozs7OyJ9
